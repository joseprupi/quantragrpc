// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FixedRateBondResponse } from '../quantra/fixed-rate-bond-response';


export class PriceFixedRateBondResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):PriceFixedRateBondResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPriceFixedRateBondResponse(bb:flatbuffers.ByteBuffer, obj?:PriceFixedRateBondResponse):PriceFixedRateBondResponse {
  return (obj || new PriceFixedRateBondResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPriceFixedRateBondResponse(bb:flatbuffers.ByteBuffer, obj?:PriceFixedRateBondResponse):PriceFixedRateBondResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PriceFixedRateBondResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bonds(index: number, obj?:FixedRateBondResponse):FixedRateBondResponse|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FixedRateBondResponse()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

bondsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startPriceFixedRateBondResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addBonds(builder:flatbuffers.Builder, bondsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bondsOffset, 0);
}

static createBondsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBondsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endPriceFixedRateBondResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPriceFixedRateBondResponse(builder:flatbuffers.Builder, bondsOffset:flatbuffers.Offset):flatbuffers.Offset {
  PriceFixedRateBondResponse.startPriceFixedRateBondResponse(builder);
  PriceFixedRateBondResponse.addBonds(builder, bondsOffset);
  return PriceFixedRateBondResponse.endPriceFixedRateBondResponse(builder);
}
}
