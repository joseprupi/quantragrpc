// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FixedRateBond } from '../quantra/fixed-rate-bond';


export class PriceFixedRateBond {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):PriceFixedRateBond {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPriceFixedRateBond(bb:flatbuffers.ByteBuffer, obj?:PriceFixedRateBond):PriceFixedRateBond {
  return (obj || new PriceFixedRateBond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPriceFixedRateBond(bb:flatbuffers.ByteBuffer, obj?:PriceFixedRateBond):PriceFixedRateBond {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PriceFixedRateBond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

fixedRateBond(obj?:FixedRateBond):FixedRateBond|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FixedRateBond()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

discountingCurve():string|null
discountingCurve(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
discountingCurve(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startPriceFixedRateBond(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addFixedRateBond(builder:flatbuffers.Builder, fixedRateBondOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, fixedRateBondOffset, 0);
}

static addDiscountingCurve(builder:flatbuffers.Builder, discountingCurveOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, discountingCurveOffset, 0);
}

static endPriceFixedRateBond(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPriceFixedRateBond(builder:flatbuffers.Builder, fixedRateBondOffset:flatbuffers.Offset, discountingCurveOffset:flatbuffers.Offset):flatbuffers.Offset {
  PriceFixedRateBond.startPriceFixedRateBond(builder);
  PriceFixedRateBond.addFixedRateBond(builder, fixedRateBondOffset);
  PriceFixedRateBond.addDiscountingCurve(builder, discountingCurveOffset);
  return PriceFixedRateBond.endPriceFixedRateBond(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):PriceFixedRateBond {
  return PriceFixedRateBond.getRootAsPriceFixedRateBond(new flatbuffers.ByteBuffer(buffer))
}
}
