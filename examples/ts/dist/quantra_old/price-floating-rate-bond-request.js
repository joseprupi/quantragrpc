"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriceFloatingRateBondRequest = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var price_floating_rate_bond_1 = require("../quantra/price-floating-rate-bond");
var PriceFloatingRateBondRequest = /** @class */ (function () {
    function PriceFloatingRateBondRequest() {
        this.bb = null;
        this.bb_pos = 0;
    }
    PriceFloatingRateBondRequest.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    PriceFloatingRateBondRequest.getRootAsPriceFloatingRateBondRequest = function (bb, obj) {
        return (obj || new PriceFloatingRateBondRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PriceFloatingRateBondRequest.getSizePrefixedRootAsPriceFloatingRateBondRequest = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new PriceFloatingRateBondRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PriceFloatingRateBondRequest.prototype.pricing = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new NS1003965332686405351.Pricing()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
    };
    PriceFloatingRateBondRequest.prototype.bonds = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? (obj || new price_floating_rate_bond_1.PriceFloatingRateBond()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    PriceFloatingRateBondRequest.prototype.bondsLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    PriceFloatingRateBondRequest.startPriceFloatingRateBondRequest = function (builder) {
        builder.startObject(2);
    };
    PriceFloatingRateBondRequest.addPricing = function (builder, pricingOffset) {
        builder.addFieldOffset(0, pricingOffset, 0);
    };
    PriceFloatingRateBondRequest.addBonds = function (builder, bondsOffset) {
        builder.addFieldOffset(1, bondsOffset, 0);
    };
    PriceFloatingRateBondRequest.createBondsVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    PriceFloatingRateBondRequest.startBondsVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    PriceFloatingRateBondRequest.endPriceFloatingRateBondRequest = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    PriceFloatingRateBondRequest.finishPriceFloatingRateBondRequestBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    PriceFloatingRateBondRequest.finishSizePrefixedPriceFloatingRateBondRequestBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    PriceFloatingRateBondRequest.createPriceFloatingRateBondRequest = function (builder, pricingOffset, bondsOffset) {
        PriceFloatingRateBondRequest.startPriceFloatingRateBondRequest(builder);
        PriceFloatingRateBondRequest.addPricing(builder, pricingOffset);
        PriceFloatingRateBondRequest.addBonds(builder, bondsOffset);
        return PriceFloatingRateBondRequest.endPriceFloatingRateBondRequest(builder);
    };
    return PriceFloatingRateBondRequest;
}());
exports.PriceFloatingRateBondRequest = PriceFloatingRateBondRequest;
//# sourceMappingURL=price-floating-rate-bond-request.js.map