"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Schedule = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var business_day_convention_1 = require("../quantra/enums/business-day-convention");
var calendar_1 = require("../quantra/enums/calendar");
var date_generation_rule_1 = require("../quantra/enums/date-generation-rule");
var frequency_1 = require("../quantra/enums/frequency");
var Schedule = /** @class */ (function () {
    function Schedule() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Schedule.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Schedule.getRootAsSchedule = function (bb, obj) {
        return (obj || new Schedule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Schedule.getSizePrefixedRootAsSchedule = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Schedule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Schedule.prototype.calendar = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : calendar_1.Calendar.Argentina;
    };
    Schedule.prototype.effectiveDate = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    Schedule.prototype.terminationDate = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    Schedule.prototype.frequency = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : frequency_1.Frequency.Annual;
    };
    Schedule.prototype.convention = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : business_day_convention_1.BusinessDayConvention.Following;
    };
    Schedule.prototype.terminationDateConvention = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : business_day_convention_1.BusinessDayConvention.Following;
    };
    Schedule.prototype.dateGenerationRule = function () {
        var offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : date_generation_rule_1.DateGenerationRule.Backward;
    };
    Schedule.prototype.endOfMont = function () {
        var offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    Schedule.startSchedule = function (builder) {
        builder.startObject(8);
    };
    Schedule.addCalendar = function (builder, calendar) {
        builder.addFieldInt8(0, calendar, calendar_1.Calendar.Argentina);
    };
    Schedule.addEffectiveDate = function (builder, effectiveDateOffset) {
        builder.addFieldOffset(1, effectiveDateOffset, 0);
    };
    Schedule.addTerminationDate = function (builder, terminationDateOffset) {
        builder.addFieldOffset(2, terminationDateOffset, 0);
    };
    Schedule.addFrequency = function (builder, frequency) {
        builder.addFieldInt8(3, frequency, frequency_1.Frequency.Annual);
    };
    Schedule.addConvention = function (builder, convention) {
        builder.addFieldInt8(4, convention, business_day_convention_1.BusinessDayConvention.Following);
    };
    Schedule.addTerminationDateConvention = function (builder, terminationDateConvention) {
        builder.addFieldInt8(5, terminationDateConvention, business_day_convention_1.BusinessDayConvention.Following);
    };
    Schedule.addDateGenerationRule = function (builder, dateGenerationRule) {
        builder.addFieldInt8(6, dateGenerationRule, date_generation_rule_1.DateGenerationRule.Backward);
    };
    Schedule.addEndOfMont = function (builder, endOfMont) {
        builder.addFieldInt8(7, +endOfMont, +false);
    };
    Schedule.endSchedule = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    Schedule.createSchedule = function (builder, calendar, effectiveDateOffset, terminationDateOffset, frequency, convention, terminationDateConvention, dateGenerationRule, endOfMont) {
        Schedule.startSchedule(builder);
        Schedule.addCalendar(builder, calendar);
        Schedule.addEffectiveDate(builder, effectiveDateOffset);
        Schedule.addTerminationDate(builder, terminationDateOffset);
        Schedule.addFrequency(builder, frequency);
        Schedule.addConvention(builder, convention);
        Schedule.addTerminationDateConvention(builder, terminationDateConvention);
        Schedule.addDateGenerationRule(builder, dateGenerationRule);
        Schedule.addEndOfMont(builder, endOfMont);
        return Schedule.endSchedule(builder);
    };
    return Schedule;
}());
exports.Schedule = Schedule;
//# sourceMappingURL=schedule.js.map