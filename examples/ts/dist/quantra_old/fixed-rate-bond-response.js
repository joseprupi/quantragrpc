"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FixedRateBondResponse = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var flows_wrapper_1 = require("../quantra/flows-wrapper");
var FixedRateBondResponse = /** @class */ (function () {
    function FixedRateBondResponse() {
        this.bb = null;
        this.bb_pos = 0;
    }
    FixedRateBondResponse.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    FixedRateBondResponse.getRootAsFixedRateBondResponse = function (bb, obj) {
        return (obj || new FixedRateBondResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FixedRateBondResponse.getSizePrefixedRootAsFixedRateBondResponse = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new FixedRateBondResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FixedRateBondResponse.prototype.npv = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.cleanPrice = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.dirtyPrice = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.accruedAmount = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.yieldq = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.accruedDays = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.macaulayDuration = function () {
        var offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.modifiedDuration = function () {
        var offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.convexity = function () {
        var offset = this.bb.__offset(this.bb_pos, 20);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.bps = function () {
        var offset = this.bb.__offset(this.bb_pos, 22);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBondResponse.prototype.flows = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 24);
        return offset ? (obj || new flows_wrapper_1.FlowsWrapper()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    FixedRateBondResponse.prototype.flowsLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 24);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    FixedRateBondResponse.startFixedRateBondResponse = function (builder) {
        builder.startObject(11);
    };
    FixedRateBondResponse.addNpv = function (builder, npv) {
        builder.addFieldFloat64(0, npv, 0.0);
    };
    FixedRateBondResponse.addCleanPrice = function (builder, cleanPrice) {
        builder.addFieldFloat64(1, cleanPrice, 0.0);
    };
    FixedRateBondResponse.addDirtyPrice = function (builder, dirtyPrice) {
        builder.addFieldFloat64(2, dirtyPrice, 0.0);
    };
    FixedRateBondResponse.addAccruedAmount = function (builder, accruedAmount) {
        builder.addFieldFloat64(3, accruedAmount, 0.0);
    };
    FixedRateBondResponse.addYield = function (builder, yieldq) {
        builder.addFieldFloat64(4, yieldq, 0.0);
    };
    FixedRateBondResponse.addAccruedDays = function (builder, accruedDays) {
        builder.addFieldFloat64(5, accruedDays, 0.0);
    };
    FixedRateBondResponse.addMacaulayDuration = function (builder, macaulayDuration) {
        builder.addFieldFloat64(6, macaulayDuration, 0.0);
    };
    FixedRateBondResponse.addModifiedDuration = function (builder, modifiedDuration) {
        builder.addFieldFloat64(7, modifiedDuration, 0.0);
    };
    FixedRateBondResponse.addConvexity = function (builder, convexity) {
        builder.addFieldFloat64(8, convexity, 0.0);
    };
    FixedRateBondResponse.addBps = function (builder, bps) {
        builder.addFieldFloat64(9, bps, 0.0);
    };
    FixedRateBondResponse.addFlows = function (builder, flowsOffset) {
        builder.addFieldOffset(10, flowsOffset, 0);
    };
    FixedRateBondResponse.createFlowsVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    FixedRateBondResponse.startFlowsVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    FixedRateBondResponse.endFixedRateBondResponse = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    FixedRateBondResponse.createFixedRateBondResponse = function (builder, npv, cleanPrice, dirtyPrice, accruedAmount, yieldq, accruedDays, macaulayDuration, modifiedDuration, convexity, bps, flowsOffset) {
        FixedRateBondResponse.startFixedRateBondResponse(builder);
        FixedRateBondResponse.addNpv(builder, npv);
        FixedRateBondResponse.addCleanPrice(builder, cleanPrice);
        FixedRateBondResponse.addDirtyPrice(builder, dirtyPrice);
        FixedRateBondResponse.addAccruedAmount(builder, accruedAmount);
        FixedRateBondResponse.addYield(builder, yieldq);
        FixedRateBondResponse.addAccruedDays(builder, accruedDays);
        FixedRateBondResponse.addMacaulayDuration(builder, macaulayDuration);
        FixedRateBondResponse.addModifiedDuration(builder, modifiedDuration);
        FixedRateBondResponse.addConvexity(builder, convexity);
        FixedRateBondResponse.addBps(builder, bps);
        FixedRateBondResponse.addFlows(builder, flowsOffset);
        return FixedRateBondResponse.endFixedRateBondResponse(builder);
    };
    return FixedRateBondResponse;
}());
exports.FixedRateBondResponse = FixedRateBondResponse;
//# sourceMappingURL=fixed-rate-bond-response.js.map