"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapHelper = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var business_day_convention_1 = require("../quantra/enums/business-day-convention");
var calendar_1 = require("../quantra/enums/calendar");
var day_counter_1 = require("../quantra/enums/day-counter");
var frequency_1 = require("../quantra/enums/frequency");
var ibor_1 = require("../quantra/enums/ibor");
var time_unit_1 = require("../quantra/enums/time-unit");
var SwapHelper = /** @class */ (function () {
    function SwapHelper() {
        this.bb = null;
        this.bb_pos = 0;
    }
    SwapHelper.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    SwapHelper.getRootAsSwapHelper = function (bb, obj) {
        return (obj || new SwapHelper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    SwapHelper.getSizePrefixedRootAsSwapHelper = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new SwapHelper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    SwapHelper.prototype.rate = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    SwapHelper.prototype.tenorTimeUnit = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : time_unit_1.TimeUnit.Days;
    };
    SwapHelper.prototype.tenorNumber = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    SwapHelper.prototype.calendar = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : calendar_1.Calendar.Argentina;
    };
    SwapHelper.prototype.swFixedLegFrequency = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : frequency_1.Frequency.Annual;
    };
    SwapHelper.prototype.swFixedLegConvention = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : business_day_convention_1.BusinessDayConvention.Following;
    };
    SwapHelper.prototype.swFixedLegDayCounter = function () {
        var offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : day_counter_1.DayCounter.Actual360;
    };
    SwapHelper.prototype.swFloatingLegIndex = function () {
        var offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : ibor_1.Ibor.Euribor10M;
    };
    SwapHelper.prototype.spread = function () {
        var offset = this.bb.__offset(this.bb_pos, 20);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    SwapHelper.prototype.fwdStartDays = function () {
        var offset = this.bb.__offset(this.bb_pos, 22);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    SwapHelper.startSwapHelper = function (builder) {
        builder.startObject(10);
    };
    SwapHelper.addRate = function (builder, rate) {
        builder.addFieldFloat32(0, rate, 0.0);
    };
    SwapHelper.addTenorTimeUnit = function (builder, tenorTimeUnit) {
        builder.addFieldInt8(1, tenorTimeUnit, time_unit_1.TimeUnit.Days);
    };
    SwapHelper.addTenorNumber = function (builder, tenorNumber) {
        builder.addFieldInt32(2, tenorNumber, 0);
    };
    SwapHelper.addCalendar = function (builder, calendar) {
        builder.addFieldInt8(3, calendar, calendar_1.Calendar.Argentina);
    };
    SwapHelper.addSwFixedLegFrequency = function (builder, swFixedLegFrequency) {
        builder.addFieldInt8(4, swFixedLegFrequency, frequency_1.Frequency.Annual);
    };
    SwapHelper.addSwFixedLegConvention = function (builder, swFixedLegConvention) {
        builder.addFieldInt8(5, swFixedLegConvention, business_day_convention_1.BusinessDayConvention.Following);
    };
    SwapHelper.addSwFixedLegDayCounter = function (builder, swFixedLegDayCounter) {
        builder.addFieldInt8(6, swFixedLegDayCounter, day_counter_1.DayCounter.Actual360);
    };
    SwapHelper.addSwFloatingLegIndex = function (builder, swFloatingLegIndex) {
        builder.addFieldInt8(7, swFloatingLegIndex, ibor_1.Ibor.Euribor10M);
    };
    SwapHelper.addSpread = function (builder, spread) {
        builder.addFieldFloat32(8, spread, 0.0);
    };
    SwapHelper.addFwdStartDays = function (builder, fwdStartDays) {
        builder.addFieldInt32(9, fwdStartDays, 0);
    };
    SwapHelper.endSwapHelper = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    SwapHelper.createSwapHelper = function (builder, rate, tenorTimeUnit, tenorNumber, calendar, swFixedLegFrequency, swFixedLegConvention, swFixedLegDayCounter, swFloatingLegIndex, spread, fwdStartDays) {
        SwapHelper.startSwapHelper(builder);
        SwapHelper.addRate(builder, rate);
        SwapHelper.addTenorTimeUnit(builder, tenorTimeUnit);
        SwapHelper.addTenorNumber(builder, tenorNumber);
        SwapHelper.addCalendar(builder, calendar);
        SwapHelper.addSwFixedLegFrequency(builder, swFixedLegFrequency);
        SwapHelper.addSwFixedLegConvention(builder, swFixedLegConvention);
        SwapHelper.addSwFixedLegDayCounter(builder, swFixedLegDayCounter);
        SwapHelper.addSwFloatingLegIndex(builder, swFloatingLegIndex);
        SwapHelper.addSpread(builder, spread);
        SwapHelper.addFwdStartDays(builder, fwdStartDays);
        return SwapHelper.endSwapHelper(builder);
    };
    return SwapHelper;
}());
exports.SwapHelper = SwapHelper;
//# sourceMappingURL=swap-helper.js.map