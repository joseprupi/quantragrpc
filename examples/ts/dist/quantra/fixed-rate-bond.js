"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FixedRateBond = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var schedule_1 = require("../quantra/schedule");
var business_day_convention_1 = require("../quantra/enums/business-day-convention");
var day_counter_1 = require("../quantra/enums/day-counter");
var FixedRateBond = /** @class */ (function () {
    function FixedRateBond() {
        this.bb = null;
        this.bb_pos = 0;
    }
    FixedRateBond.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    FixedRateBond.getRootAsFixedRateBond = function (bb, obj) {
        return (obj || new FixedRateBond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FixedRateBond.getSizePrefixedRootAsFixedRateBond = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new FixedRateBond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FixedRateBond.prototype.settlementDays = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    FixedRateBond.prototype.faceAmount = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBond.prototype.rate = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBond.prototype.accrualDayCounter = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : day_counter_1.DayCounter.Actual360;
    };
    FixedRateBond.prototype.paymentConvention = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : business_day_convention_1.BusinessDayConvention.Following;
    };
    FixedRateBond.prototype.redemption = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    };
    FixedRateBond.prototype.issueDate = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    FixedRateBond.prototype.schedule = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? (obj || new schedule_1.Schedule()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
    };
    FixedRateBond.startFixedRateBond = function (builder) {
        builder.startObject(8);
    };
    FixedRateBond.addSettlementDays = function (builder, settlementDays) {
        builder.addFieldInt32(0, settlementDays, 0);
    };
    FixedRateBond.addFaceAmount = function (builder, faceAmount) {
        builder.addFieldFloat64(1, faceAmount, 0.0);
    };
    FixedRateBond.addRate = function (builder, rate) {
        builder.addFieldFloat64(2, rate, 0.0);
    };
    FixedRateBond.addAccrualDayCounter = function (builder, accrualDayCounter) {
        builder.addFieldInt8(3, accrualDayCounter, day_counter_1.DayCounter.Actual360);
    };
    FixedRateBond.addPaymentConvention = function (builder, paymentConvention) {
        builder.addFieldInt8(4, paymentConvention, business_day_convention_1.BusinessDayConvention.Following);
    };
    FixedRateBond.addRedemption = function (builder, redemption) {
        builder.addFieldFloat64(5, redemption, 0.0);
    };
    FixedRateBond.addIssueDate = function (builder, issueDateOffset) {
        builder.addFieldOffset(6, issueDateOffset, 0);
    };
    FixedRateBond.addSchedule = function (builder, scheduleOffset) {
        builder.addFieldOffset(7, scheduleOffset, 0);
    };
    FixedRateBond.endFixedRateBond = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    FixedRateBond.prototype.serialize = function () {
        return this.bb.bytes();
    };
    FixedRateBond.deserialize = function (buffer) {
        return FixedRateBond.getRootAsFixedRateBond(new flatbuffers.ByteBuffer(buffer));
    };
    return FixedRateBond;
}());
exports.FixedRateBond = FixedRateBond;
//# sourceMappingURL=fixed-rate-bond.js.map