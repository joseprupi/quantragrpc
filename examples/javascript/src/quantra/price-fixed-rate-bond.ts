// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FixedRateBond } from '../quantra/fixed-rate-bond';
import { Yield } from '../quantra/yield';


export class PriceFixedRateBond {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): PriceFixedRateBond {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsPriceFixedRateBond(bb: flatbuffers.ByteBuffer, obj?: PriceFixedRateBond): PriceFixedRateBond {
    return (obj || new PriceFixedRateBond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsPriceFixedRateBond(bb: flatbuffers.ByteBuffer, obj?: PriceFixedRateBond): PriceFixedRateBond {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new PriceFixedRateBond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  fixedRateBond(obj?: FixedRateBond): FixedRateBond | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? (obj || new FixedRateBond()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
  }

  discountingCurve(): string | null
  discountingCurve(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  discountingCurve(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  yield(obj?: Yield): Yield | null {
    const offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? (obj || new Yield()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
  }

  static startPriceFixedRateBond(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  static addFixedRateBond(builder: flatbuffers.Builder, fixedRateBondOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, fixedRateBondOffset, 0);
  }

  static addDiscountingCurve(builder: flatbuffers.Builder, discountingCurveOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, discountingCurveOffset, 0);
  }

  static addYield(builder: flatbuffers.Builder, yieldOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, yieldOffset, 0);
  }

  static endPriceFixedRateBond(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

}
