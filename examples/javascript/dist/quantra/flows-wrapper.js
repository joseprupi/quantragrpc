"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlowsWrapper = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var flow_1 = require("../quantra/flow");
var FlowsWrapper = /** @class */ (function () {
    function FlowsWrapper() {
        this.bb = null;
        this.bb_pos = 0;
    }
    FlowsWrapper.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    FlowsWrapper.getRootAsFlowsWrapper = function (bb, obj) {
        return (obj || new FlowsWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FlowsWrapper.getSizePrefixedRootAsFlowsWrapper = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new FlowsWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FlowsWrapper.prototype.flowWrapperType = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : flow_1.Flow.NONE;
    };
    FlowsWrapper.prototype.flowWrapper = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
    };
    FlowsWrapper.startFlowsWrapper = function (builder) {
        builder.startObject(2);
    };
    FlowsWrapper.addFlowWrapperType = function (builder, flowWrapperType) {
        builder.addFieldInt8(0, flowWrapperType, flow_1.Flow.NONE);
    };
    FlowsWrapper.addFlowWrapper = function (builder, flowWrapperOffset) {
        builder.addFieldOffset(1, flowWrapperOffset, 0);
    };
    FlowsWrapper.endFlowsWrapper = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    FlowsWrapper.createFlowsWrapper = function (builder, flowWrapperType, flowWrapperOffset) {
        FlowsWrapper.startFlowsWrapper(builder);
        FlowsWrapper.addFlowWrapperType(builder, flowWrapperType);
        FlowsWrapper.addFlowWrapper(builder, flowWrapperOffset);
        return FlowsWrapper.endFlowsWrapper(builder);
    };
    return FlowsWrapper;
}());
exports.FlowsWrapper = FlowsWrapper;
//# sourceMappingURL=flows-wrapper.js.map