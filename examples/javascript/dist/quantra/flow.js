"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.unionListToFlow = exports.unionToFlow = exports.Flow = void 0;
var flow_interest_1 = require("../quantra/flow-interest");
var flow_notional_1 = require("../quantra/flow-notional");
var flow_past_interest_1 = require("../quantra/flow-past-interest");
var Flow;
(function (Flow) {
    Flow[Flow["NONE"] = 0] = "NONE";
    Flow[Flow["FlowInterest"] = 1] = "FlowInterest";
    Flow[Flow["FlowPastInterest"] = 2] = "FlowPastInterest";
    Flow[Flow["FlowNotional"] = 3] = "FlowNotional";
})(Flow = exports.Flow || (exports.Flow = {}));
function unionToFlow(type, accessor) {
    switch (Flow[type]) {
        case 'NONE': return null;
        case 'FlowInterest': return accessor(new flow_interest_1.FlowInterest());
        case 'FlowPastInterest': return accessor(new flow_past_interest_1.FlowPastInterest());
        case 'FlowNotional': return accessor(new flow_notional_1.FlowNotional());
        default: return null;
    }
}
exports.unionToFlow = unionToFlow;
function unionListToFlow(type, accessor, index) {
    switch (Flow[type]) {
        case 'NONE': return null;
        case 'FlowInterest': return accessor(index, new flow_interest_1.FlowInterest());
        case 'FlowPastInterest': return accessor(index, new flow_past_interest_1.FlowPastInterest());
        case 'FlowNotional': return accessor(index, new flow_notional_1.FlowNotional());
        default: return null;
    }
}
exports.unionListToFlow = unionListToFlow;
//# sourceMappingURL=flow.js.map