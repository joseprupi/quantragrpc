"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TermStructure = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var points_wrapper_1 = require("../quantra/points-wrapper");
var bootstrap_trait_1 = require("../quantra/enums/bootstrap-trait");
var day_counter_1 = require("../quantra/enums/day-counter");
var interpolator_1 = require("../quantra/enums/interpolator");
var TermStructure = /** @class */ (function () {
    function TermStructure() {
        this.bb = null;
        this.bb_pos = 0;
    }
    TermStructure.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    TermStructure.getRootAsTermStructure = function (bb, obj) {
        return (obj || new TermStructure()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TermStructure.getSizePrefixedRootAsTermStructure = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TermStructure()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TermStructure.prototype.id = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    TermStructure.prototype.dayCounter = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : day_counter_1.DayCounter.Actual360;
    };
    TermStructure.prototype.interpolator = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : interpolator_1.Interpolator.BackwardFlat;
    };
    TermStructure.prototype.bootstrapTrait = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : bootstrap_trait_1.BootstrapTrait.Discount;
    };
    TermStructure.prototype.points = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? (obj || new points_wrapper_1.PointsWrapper()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    TermStructure.prototype.pointsLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    TermStructure.prototype.asOfDate = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    TermStructure.startTermStructure = function (builder) {
        builder.startObject(6);
    };
    TermStructure.addId = function (builder, idOffset) {
        builder.addFieldOffset(0, idOffset, 0);
    };
    TermStructure.addDayCounter = function (builder, dayCounter) {
        builder.addFieldInt8(1, dayCounter, day_counter_1.DayCounter.Actual360);
    };
    TermStructure.addInterpolator = function (builder, interpolator) {
        builder.addFieldInt8(2, interpolator, interpolator_1.Interpolator.BackwardFlat);
    };
    TermStructure.addBootstrapTrait = function (builder, bootstrapTrait) {
        builder.addFieldInt8(3, bootstrapTrait, bootstrap_trait_1.BootstrapTrait.Discount);
    };
    TermStructure.addPoints = function (builder, pointsOffset) {
        builder.addFieldOffset(4, pointsOffset, 0);
    };
    TermStructure.createPointsVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    TermStructure.startPointsVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    TermStructure.addAsOfDate = function (builder, asOfDateOffset) {
        builder.addFieldOffset(5, asOfDateOffset, 0);
    };
    TermStructure.endTermStructure = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    TermStructure.finishTermStructureBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    TermStructure.finishSizePrefixedTermStructureBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    TermStructure.createTermStructure = function (builder, idOffset, dayCounter, interpolator, bootstrapTrait, pointsOffset, asOfDateOffset) {
        TermStructure.startTermStructure(builder);
        TermStructure.addId(builder, idOffset);
        TermStructure.addDayCounter(builder, dayCounter);
        TermStructure.addInterpolator(builder, interpolator);
        TermStructure.addBootstrapTrait(builder, bootstrapTrait);
        TermStructure.addPoints(builder, pointsOffset);
        TermStructure.addAsOfDate(builder, asOfDateOffset);
        return TermStructure.endTermStructure(builder);
    };
    return TermStructure;
}());
exports.TermStructure = TermStructure;
//# sourceMappingURL=term-structure.js.map